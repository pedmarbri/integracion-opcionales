{"version":3,"sources":["../../src/service/archiveService.js"],"names":["fetch","require","platformConfig","currentVersion","version","archiveService","data","backendUrl","tenant","app","name","method","headers","Authorization","accessKey","response","ok","text","Error","json"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,kBAAR,CAAd;AACA,IAAMC,iBAAiBD,QAAQ,WAAR,CAAvB;AACA,IAAME,iBAAiBF,QAAQ,oBAAR,EAA8BG,OAArD;;AAEA,IAAMC;AAAA,qEAAiB,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEN,MACpB,GAAEE,eAAeK,UAAW,WAAUD,KAAKE,MAAO,iBAAgBF,KAAKG,GAAI,aAC1EH,KAAKI,IACN,EAHoB,EAIrB;AACEC,sBAAQ,QADV;AAEEC,uBAAS;AACP,gCAAgB,kBADT;AAEP,sCAAsBT,cAFf;AAGPU,+BAAgB,UAASP,KAAKQ,SAAU;AAHjC;AAFX,aAJqB,CADF;;AAAA;AACfC,oBADe;;AAAA,gBAehBA,SAASC,EAfO;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgBAD,SAASE,IAAT,EAhBA;;AAAA;AAgBbA,gBAhBa;AAAA,kBAiBb,IAAIC,KAAJ,CAAUD,IAAV,CAjBa;;AAAA;AAAA,6CAmBdF,SAASI,IAAT,EAnBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAsBed,c","file":"archiveService.js","sourcesContent":["const fetch = require('isomorphic-fetch')\nconst platformConfig = require('../config')\nconst currentVersion = require('../../package.json').version\n\nconst archiveService = async (data) => {\n  const response = await fetch(\n    `${platformConfig.backendUrl}tenants/${data.tenant}/applications/${data.app}/services/${\n      data.name\n    }`,\n    {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-platform-version': currentVersion,\n        Authorization: `bearer ${data.accessKey}`\n      }\n    }\n  )\n\n  if (!response.ok) {\n    const text = await response.text()\n    throw new Error(text)\n  }\n  return response.json()\n}\n\nexport default archiveService\n"]}